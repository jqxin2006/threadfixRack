<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   					   http://www.springframework.org/schema/context 
						   http://www.springframework.org/schema/context/spring-context-3.0.xsd
						   http://activemq.apache.org/schema/core 
						   http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd
						   http://www.springframework.org/schema/jms 
						   http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">

	<!-- creates an activemq connection factory using the amq namespace -->
	<amq:connectionFactory id="amqConnectionFactory"
		brokerURL="${jms.url}" userName="${jms.username}" password="${jms.password} " />

	<amq:broker brokerName="broker">
		<amq:persistenceAdapter>
			<amq:kahaDB directory="/var/lib/tomcat7/activemq-data" journalMaxFileLength="32mb"/>
		</amq:persistenceAdapter>
	</amq:broker>

	<!--
		CachingConnectionFactory Definition, sessionCacheSize property is the
		number of sessions to cache
	-->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory"
		p:exceptionListener-ref="jmsExceptionListener" p:sessionCacheSize="100">
		<constructor-arg ref="amqConnectionFactory" />
	</bean>

	<!-- JmsTemplate Definition -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<constructor-arg ref="connectionFactory" />
	</bean>

	<!--
		listener container definition using the jms namespace, concurrency is
		the max number of concurrent listeners that can be started
	-->
	<jms:listener-container concurrency="1">
		<jms:listener id="QueueListener" destination="requestQueue"
			ref="queueListener" />
	</jms:listener-container>

	<!--
		Job Detail bean run by Quartz to start Defect Tracker synchronization
	-->
	<bean name="defectTrackerJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"
		p:targetObject-ref="queueSenderImpl" p:targetMethod="startDefectTrackerSync" />

	<!-- Job Detail bean run by Quartz to start Import Scans -->
	<bean name="importScansJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"
		p:targetObject-ref="queueSenderImpl" p:targetMethod="startImportScans" />

	<!-- cron based trigger for synchronization with Defect Trackers -->
	<!-- run every morning at 2 AM -->
	<bean id="defectTrackerCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="defectTrackerJob" p:cronExpression="2 0 0 * * ?" />

	<!-- cron based trigger for Import Scans -->
	<!-- run every morning at 6 AM -->
	<bean id="importScansCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="importScansJob" p:cronExpression="6 0 0 * * ?" />
		
	<!--
		SchedulerFactoryBean to set up cron triggers for importing scans and
		defect tracker synchronization
	-->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="defectTrackerCronTrigger" />
				<ref bean="importScansCronTrigger" />
			</list>
		</property>
	</bean>
</beans>